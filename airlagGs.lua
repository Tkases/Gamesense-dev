local refs={doubletap,doubletap_key=ui.reference("RAGE","Aimbot","Double tap"),fakelag_limit,fakelag_variance=ui.reference("AA","Fake lag","Limit"),fakeduck,fakeduck_key=ui.reference("AA","Other","Duck peek assist")}local air_lag={enabled=ui.new_checkbox("AA","Anti-Aim","Air Lag"),main_key=ui.new_hotkey("AA","Anti-Aim","Air Lag Key"),dt_enabled=ui.new_checkbox("AA","Anti-Aim","DT Toggle"),dt_speed=ui.new_slider("AA","Anti-Aim","DT Tick",1,8,4,true,"ticks"),lag_enabled=ui.new_checkbox("AA","Anti-Aim","Auto Fakelag"),lag_speed=ui.new_slider("AA","Anti-Aim","Lag Tick",1,10,5,true,"ticks"),lag_limit=ui.new_slider("AA","Anti-Aim","Lag Limit",10,16,15,true,""),lag_min=ui.new_slider("AA","Anti-Aim","Min Variance",20,35,25,true,"%"),lag_max=ui.new_slider("AA","Anti-Aim","Max Variance",20,35,30,true,"%"),auto_fd=ui.new_checkbox("AA","Anti-Aim","Auto Fake Duck"),choke_mode=ui.new_checkbox("AA","Anti-Aim","Choke Mode"),choke_send=ui.new_slider("AA","Anti-Aim","Send Packets",1,16,4,true,"packets"),choke_drop=ui.new_slider("AA","Anti-Aim","Drop Packets",1,16,8,true,"packets"),choke_ping=ui.new_checkbox("AA","Anti-Aim","Ping Compensation"),active=false,dt_counter=0,lag_counter=0,choke_counter=0,original_settings={}}local function save_original_settings()air_lag.original_settings={limit=ui.get(refs.fakelag_limit),variance=ui.get(refs.fakelag_variance)}end local function handle_choke_mode(cmd)if not ui.get(air_lag.choke_mode)then return end local ping_compensation=ui.get(air_lag.choke_ping)and math.floor(client.latency()*62.5)or 0 air_lag.choke_counter=(air_lag.choke_counter+1)%(ui.get(air_lag.choke_send)+ui.get(air_lag.choke_drop)+ping_compensation)if air_lag.choke_counter>=ui.get(air_lag.choke_send)then cmd.send_packet=false end end client.set_event_callback("setup_command",function(cmd)local local_player=entity.get_local_player()if not entity.is_alive(local_player)then return end local in_air=bit.band(entity.get_prop(local_player,"m_fFlags"),1)==0 local fake_ducking=ui.get(refs.fakeduck_key)air_lag.active=ui.get(air_lag.enabled)and(ui.get(air_lag.main_key)or(ui.get(air_lag.auto_fd)and fake_ducking)or in_air)if air_lag.active then if ui.get(air_lag.dt_enabled)then air_lag.dt_counter=(air_lag.dt_counter+1)%(ui.get(air_lag.dt_speed)+1)if air_lag.dt_counter==0 then ui.set(refs.doubletap,true)end end if ui.get(air_lag.lag_enabled)then air_lag.lag_counter=air_lag.lag_counter+1 if air_lag.lag_counter>=ui.get(air_lag.lag_speed)then ui.set(refs.fakelag_limit,ui.get(air_lag.lag_limit))local random_variance=client.random_int(ui.get(air_lag.lag_min),ui.get(air_lag.lag_max))ui.set(refs.fakelag_variance,random_variance)air_lag.lag_counter=0 end end handle_choke_mode(cmd)else if ui.get(air_lag.lag_enabled)and air_lag.original_settings.limit and air_lag.original_settings.variance then ui.set(refs.fakelag_limit,air_lag.original_settings.limit)ui.set(refs.fakelag_variance,air_lag.original_settings.variance)end end end)client.set_event_callback("player_connect_full",save_original_settings)client.set_event_callback("round_start",function()air_lag.active=false ui.set(refs.doubletap,false)end)client.set_event_callback("shutdown",function()if air_lag.original_settings.limit and air_lag.original_settings.variance then ui.set(refs.fakelag_limit,air_lag.original_settings.limit)ui.set(refs.fakelag_variance,air_lag.original_settings.variance)end end)save_original_settings()

